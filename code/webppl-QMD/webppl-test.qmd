---
title: "Testing webPPL in QMD"
author: "Michael Franke"
format: 
  html:
    css: "webppl-editor.css"
include-before-body:
  text: |
    <script src="https://s3-us-west-2.amazonaws.com/cdn.webppl.org/webppl-editor-1.0.9.js"></script>
    <script src="https://s3-us-west-2.amazonaws.com/cdn.webppl.org/webppl-viz-0.7.11.js"></script>
    <script src="https://s3-us-west-2.amazonaws.com/cdn.webppl.org/webppl-v0.9.13.js" defer async></script>
---

# Set up

Include the file `webppl-editor.jss` in the same directory.
Use `include-before-body` in the yml-preamble of the QMD-document to include the JS files.

At the end of the document include the functions (from IDA textbook) to scrpe and render the webPPL functionality.


# Example

Here is the three-card problem:

<pre class="webppl">
// three cards; with blue or red on either side
var cards = [["blue", "blue"],
             ["blue", "red"],
             ["red", "red"]]

var model = function() {
  var card  = uniformDraw(cards)
  var color = uniformDraw(card)
  condition(color == "blue")
  return card.join("-")
}

viz(Infer({method: "enumerate", 
           model: model
           }))
</pre>

<script>
// find all <pre> elements and set up the editor on them
var preEls = Array.prototype.slice.call(document.getElementsByClassName("webppl"));
preEls.map(function(el) { console.log(el); editor.setup(el, {language: 'webppl'}); });
</script> 

# TODO

- adjust size of text in webPPL code box
- get rid of "download graph" stuff?